const pkg = require('pg');
const { Pool } = pkg;

const pool = new Pool({
    user: "postgres",
    password: "Passwort",
    database: "testwad",
    host: "localhost",
    port: "5432"
});


const execute = async(query1, query2) => {
    try {
        await pool.connect();
        await pool.query(query1);
        await pool.query(query2);
        return true;
    } catch (error) {
        console.error(error.stack);
        return false;
    }
};

// A simple query that creates a table in our database
// Note that the "SERIAL"  pseudo-type that is used after the "id" is used to create a sequence object,
// and set the next value generated by the sequence as the default value for the column
const createTblQuery1 = `
    CREATE TABLE IF NOT EXISTS "posts" (
	    "id" SERIAL PRIMARY KEY,         
	    "date" DATE NOT NULL,
        "author" VARCHAR(200) NOT NULL,
	    "content" TEXT NOT NULL,
        "image" TEXT NULL
    );
`;

// Second query to create "users" table for auth purpose
const createTblQuery2 = `
    CREATE TABLE IF NOT EXISTS "users" (
        id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
        email VARCHAR(200) NOT NULL UNIQUE,
        password VARCHAR(200) NOT NULL 
    );
`;

// A function to execute the previous query
execute(createTblQuery1, createTblQuery2).then(result => {
    if (result) {
        console.log('If does not exists, create the "posts" and "users" table');
    }
});

module.exports = pool;